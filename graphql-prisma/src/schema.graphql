type Query {
  authors(query: String, first: Int, skip: Int, after: String): [Author]!
  posts(query: String, first: Int, skip: Int, after: String): [Post]!
  comments(query: String, first: Int, skip: Int): [Comment]!
  post(id: ID!): Post!
  me: Author!
  myPosts(query: String, first: Int, skip: Int, after: String): [Post]!
}

type Mutation {
  login(data: LoginUserInput!): AuthPayload!

  createAuthor(data: CreateAuthorInput): AuthPayload!
  deleteAuthor: Author!
  updateAuthor(data: UpdateAuthorInput!): Author!

  createPost(data: CreatePostInput): Post!
  deletePost(id: ID!): Post!
  updatePost(id: ID!, data: UpdatePostInput!): Post!

  createComment(data: CreateCommentInput): Comment!
  deleteComment(id: ID!): Comment!
  updateComment(id: ID!, data: UpdateCommentInput!): Comment!
}

input LoginUserInput {
  email: String!
  password: String!
}

type AuthPayload {
  token: String!
  user: Author!
}

type Subscription {
  comment(postId: ID!): CommentSubscriptionPayload!
  post: PostSubscriptionPayload!
  author: AuthorSubscriptionPayload!
  myPost: PostSubscriptionPayload!
}

input CreateCommentInput {
  text: String!
  post: ID!
}

input UpdateCommentInput {
  text: String
}

input CreatePostInput {
  title: String!
  body: String!
  isPublished: Boolean
}

input UpdatePostInput {
  title: String
  body: String
  isPublished: Boolean
}

input CreateAuthorInput {
  name: String!
  email: String!
  password: String!
}

input UpdateAuthorInput {
  name: String
  email: String
  password: String
}

type Author {
  id: ID!
  name: String!
  email: String
  password: String!
  posts: [Post]!
  comments: [Comment]!
}

type Post {
  id: ID!
  title: String!
  body: String!
  isPublished: Boolean
  author: Author!
  comments: [Comment]!
}

type Comment {
  id: ID!
  text: String!
  post: Post!
  author: Author!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

type CommentSubscriptionPayload {
  mutation: MutationType!
  node: Comment
}

type PostSubscriptionPayload {
  mutation: MutationType!
  node: Post
}

type AuthorSubscriptionPayload {
  mutation: MutationType!
  node: Author
}
